!function(){"use strict";function t(t){function e(e,r){var i=Object.keys(t.mapping)[0];e[t.mapping[i]]?this.cache[r]=n(e):this.cache[r]={}}function r(t){var e=this.cache[t];if(e)return e}function n(e){var r={};return Object.keys(t.mapping).forEach(function(n){r[n]=e[t.mapping[n]]}),r}return{cache:{},set:e,get:r}}function e(t){function e(t){return!isNaN(parseFloat(t))&&isFinite(t)}return{isNumeric:e}}function r(t,e,r){function n(n,i){return r.set(i(),t.get("namespace")),e.transformResponse&&(n=e.transformResponse(n,i)),angular.fromJson(n)}function i(r){var n=t.get("namespace"),i=r;if(n){var o={};o[n]=r,i=o}return e.transformRequest&&(i=e.transformRequest(i)),JSON.stringify(i)}return{response:n,request:i}}function n(t,e){function r(t){return this.options=this.options||{},t?this.options[t]:this.options}function n(t){this.options=i(t),this.options.params=this.options.params||{},this.options.methods=this.options.methods||{},this.options.baseUrl=this.options.baseUrl||e.apiUrl}function i(e){if(null!==e&&"string"==typeof e){return{url:"/"+t.pluralize(e)+"/:id/:action",params:{id:"@id",action:"@action"},namespace:e}}if(null!==e&&"object"==typeof e)return e;throw new Error("Argument must be a string or a valid Javascript object.")}return{get:r,set:n}}t.$inject=["PaginatorSettings"],angular.module("SimplePaginator",[]).provider("PaginatorSettings",function(){this.mapping={perPage:"X-Pagination-Limit",current:"X-Pagination-Current-Page",total:"X-Pagination-Total-Count",totalPages:"X-Pagination-Total-Pages"},this.$get=function(){return{mapping:this.mapping}},this.configure=function(t){for(var e in t)this[e]=t[e]}}).service("SimplePaginator",t),angular.module("SimpleResource",["ngResource","platanus.inflector","SimplePaginator"]).provider("SimpleResourceSettings",function(){this.apiUrl=void 0,this.$get=function(){return{apiUrl:this.apiUrl}},this.configure=function(t){for(var e in t)this[e]=t[e]}}).factory("SimpleResource",["$resource","SRHelper","SRInterceptor","SRParameters",function(t,e,r,n){return function(i){n.set(i);var o={query:{method:"GET",isArray:!0,transformResponse:r.response},get:{method:"GET"},create:{method:"POST",transformRequest:r.request},update:{method:"PUT",transformRequest:r.request},destroy:{method:"DELETE"}};angular.extend(o,n.get("methods"));var s=n.get("baseUrl")+n.get("url"),a=t(s,n.get("params"),o);return a.all=function(t){var e=t||{};return this.query(e)},a.find=function(t,r){var n=e.isNumeric(t)?{id:t}:t;return this.get(n,r)},a.instanceMethods=function(t){return angular.extend(this.prototype,t),this},a.prototype.save=function(){return this[this.id?"$update":"$create"]()},a.prototype.delete=function(){if(!this.id)throw new Error("Object must have an id to be deleted.");return this.$destroy({id:this.id})},a}}]),e.$inject=["inflector"],angular.module("SimpleResource").service("SRHelper",e),r.$inject=["SRParameters","SimpleResourceSettings","SimplePaginator"],angular.module("SimpleResource").service("SRInterceptor",r),n.$inject=["inflector","SimpleResourceSettings"],angular.module("SimpleResource").service("SRParameters",n)}();